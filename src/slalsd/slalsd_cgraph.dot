digraph "slalsd"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="slalsd",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="SLALSD uses the singular value decomposition of A to solve the least squares problem."];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="slacpy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slacpy_8f.html#a7780c991533ce8dd1f2c22ae2d563f08",tooltip="SLACPY copies all or part of one two-dimensional array to another."];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="slalsa",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slalsa_8f.html#adbe5eb425046a673b19098e937b82819",tooltip="SLALSA computes the SVD of the coefficient matrix in compact form. Used by sgelsd."];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="slals0",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slals0_8f.html#a5ef6e7c1cdb213f54b4d782b39dd0ee3",tooltip="SLALS0 applies back multiplying factors in solving the least squares problem using divide and conquer..."];
  Node4 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="slascl",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slascl_8f.html#a11e6ce67ce97ca5b0a3a7bc5645a09d9",tooltip="SLASCL multiplies a general rectangular matrix by a real scalar defined as cto/cfrom."];
  Node5 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="xerbla",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$xerbla_8f.html#a377ee61015baf8dea7770b3a404b1c07",tooltip="XERBLA"];
  Node4 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="slasdt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasdt_8f.html#ae747f83ac11f2283d1d3f8b09d7a1138",tooltip="SLASDT creates a tree of subproblems for bidiagonal divide and conquer. Used by sbdsdc."];
  Node3 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="slartg",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slartg_8f90.html#a8836d25697ed4d8cc0b7d0f45b558c3b",tooltip="SLARTG generates a plane rotation with real cosine and real sine."];
  Node1 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="slasda",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasda_8f.html#afe52aa918bfa2a863f122f39ae9e6404",tooltip="SLASDA computes the singular value decomposition (SVD) of a real upper bidiagonal matrix with diagona..."];
  Node9 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="slasd6",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasd6_8f.html#a49655eb79b1745feabd7e9069f05e485",tooltip="SLASD6 computes the SVD of an updated upper bidiagonal matrix obtained by merging two smaller ones by..."];
  Node10 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="slamrg",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slamrg_8f.html#a08dba55e84b9c57fb48b15b92d2b9049",tooltip="SLAMRG creates a permutation list to merge the entries of two independently sorted sets into a single..."];
  Node10 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="slasd7",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasd7_8f.html#a506889eb5029bb8325b9b2ac02a62bce",tooltip="SLASD7 merges the two sets of singular values together into a single sorted set. Then it tries to def..."];
  Node12 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="slasd8",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasd8_8f.html#ac4e0b8da65a5d9493e17f46cd010e6cc",tooltip="SLASD8 finds the square roots of the roots of the secular equation, and stores, for each element in D..."];
  Node13 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="slasd4",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasd4_8f.html#a6680aa4ad62702cd9a00d7530c8ab53a",tooltip="SLASD4 computes the square root of the i-th updated eigenvalue of a positive symmetric rank-one modif..."];
  Node14 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="slaed6",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slaed6_8f.html#af5919aeb57bc9c8153d7ae9f0ecc3276",tooltip="SLAED6 used by SSTEDC. Computes one Newton step in solution of the secular equation."];
  Node14 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="slasd5",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasd5_8f.html#a19de62ad22e8492c93ac450198557d05",tooltip="SLASD5 computes the square root of the i-th eigenvalue of a positive symmetric rank-one modification ..."];
  Node13 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="slaset",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slaset_8f.html#a6174184453f17ad7cc3488044325d5ac",tooltip="SLASET initializes the off-diagonal elements and the diagonal elements of a matrix to given values."];
  Node13 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="slasdq",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasdq_8f.html#abb4a455a53f317631c56b07d4828eb28",tooltip="SLASDQ computes the SVD of a real bidiagonal matrix with diagonal d and off-diagonal e...."];
  Node18 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="sbdsqr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sbdsqr_8f.html#a8a0972d7fba9e4e3803db17de2346179",tooltip="SBDSQR"];
  Node19 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="slas2",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slas2_8f.html#a7047efd8096db5f0724f79cad80e4127",tooltip="SLAS2 computes singular values of a 2-by-2 triangular matrix."];
  Node19 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="slasq1",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasq1_8f.html#a3e6606c8bed0351a4fbf2efc060131a8",tooltip="SLASQ1 computes the singular values of a real square bidiagonal matrix. Used by sbdsqr."];
  Node21 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="slasq2",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasq2_8f.html#a1bc0bdbf2a3d3d0de17d2f705c5df756",tooltip="SLASQ2 computes all the eigenvalues of the symmetric positive definite tridiagonal matrix associated ..."];
  Node22 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="slasq3",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasq3_8f.html#a1a6666b6578bef593095307a83d0e943",tooltip="SLASQ3 checks for deflation, computes a shift and calls dqds. Used by sbdsqr."];
  Node23 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="slasq4",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasq4_8f.html#a41519cdfaf4d34b78d282be8797ad5c0",tooltip="SLASQ4 computes an approximation to the smallest eigenvalue using values of d from the previous trans..."];
  Node23 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="slasq5",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasq5_8f.html#a6e311e45ee4f985837a13ceca43c864b",tooltip="SLASQ5 computes one dqds transform in ping-pong form. Used by sbdsqr and sstegr."];
  Node23 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="slasq6",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasq6_8f.html#a847ecd4284d546b78ff81b4f89603ad6",tooltip="SLASQ6 computes one dqd transform in ping-pong form. Used by sbdsqr and sstegr."];
  Node22 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="slasrt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasrt_8f.html#a66e14f999e0c96b0d974849882160a07",tooltip="SLASRT sorts numbers in increasing or decreasing order."];
  Node27 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="slasr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasr_8f.html#a60f6d566e3a36c43835b0ff3055879dc",tooltip="SLASR applies a sequence of plane rotations to a general rectangular matrix."];
  Node28 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="slasv2",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$slasv2_8f.html#a8783434fbc24d465134e5604c5737565",tooltip="SLASV2 computes the singular value decomposition of a 2-by-2 triangular matrix."];
  Node19 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
